-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity matrix_mul_matrix_mul_Pipeline_VITIS_LOOP_76_14 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_axi_gmem2_AWVALID : OUT STD_LOGIC;
    m_axi_gmem2_AWREADY : IN STD_LOGIC;
    m_axi_gmem2_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem2_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem2_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_WVALID : OUT STD_LOGIC;
    m_axi_gmem2_WREADY : IN STD_LOGIC;
    m_axi_gmem2_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem2_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_WLAST : OUT STD_LOGIC;
    m_axi_gmem2_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_ARVALID : OUT STD_LOGIC;
    m_axi_gmem2_ARREADY : IN STD_LOGIC;
    m_axi_gmem2_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem2_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem2_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_RVALID : IN STD_LOGIC;
    m_axi_gmem2_RREADY : OUT STD_LOGIC;
    m_axi_gmem2_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem2_RLAST : IN STD_LOGIC;
    m_axi_gmem2_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_gmem2_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_BVALID : IN STD_LOGIC;
    m_axi_gmem2_BREADY : OUT STD_LOGIC;
    m_axi_gmem2_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    local_C_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    local_C_ce0 : OUT STD_LOGIC;
    local_C_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_C_1_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    local_C_1_ce0 : OUT STD_LOGIC;
    local_C_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_C_2_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    local_C_2_ce0 : OUT STD_LOGIC;
    local_C_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_C_3_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    local_C_3_ce0 : OUT STD_LOGIC;
    local_C_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_C_4_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    local_C_4_ce0 : OUT STD_LOGIC;
    local_C_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_C_5_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    local_C_5_ce0 : OUT STD_LOGIC;
    local_C_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_C_6_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    local_C_6_ce0 : OUT STD_LOGIC;
    local_C_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_C_7_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    local_C_7_ce0 : OUT STD_LOGIC;
    local_C_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_C_8_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    local_C_8_ce0 : OUT STD_LOGIC;
    local_C_8_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_C_9_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    local_C_9_ce0 : OUT STD_LOGIC;
    local_C_9_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_C_10_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    local_C_10_ce0 : OUT STD_LOGIC;
    local_C_10_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_C_11_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    local_C_11_ce0 : OUT STD_LOGIC;
    local_C_11_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_C_12_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    local_C_12_ce0 : OUT STD_LOGIC;
    local_C_12_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_C_13_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    local_C_13_ce0 : OUT STD_LOGIC;
    local_C_13_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_C_14_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    local_C_14_ce0 : OUT STD_LOGIC;
    local_C_14_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_C_15_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    local_C_15_ce0 : OUT STD_LOGIC;
    local_C_15_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_C_16_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    local_C_16_ce0 : OUT STD_LOGIC;
    local_C_16_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_C_17_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    local_C_17_ce0 : OUT STD_LOGIC;
    local_C_17_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_C_18_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    local_C_18_ce0 : OUT STD_LOGIC;
    local_C_18_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_C_19_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    local_C_19_ce0 : OUT STD_LOGIC;
    local_C_19_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_C_20_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    local_C_20_ce0 : OUT STD_LOGIC;
    local_C_20_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_C_21_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    local_C_21_ce0 : OUT STD_LOGIC;
    local_C_21_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_C_22_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    local_C_22_ce0 : OUT STD_LOGIC;
    local_C_22_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_C_23_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    local_C_23_ce0 : OUT STD_LOGIC;
    local_C_23_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_C_24_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    local_C_24_ce0 : OUT STD_LOGIC;
    local_C_24_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_C_25_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    local_C_25_ce0 : OUT STD_LOGIC;
    local_C_25_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_C_26_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    local_C_26_ce0 : OUT STD_LOGIC;
    local_C_26_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_C_27_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    local_C_27_ce0 : OUT STD_LOGIC;
    local_C_27_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_C_28_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    local_C_28_ce0 : OUT STD_LOGIC;
    local_C_28_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_C_29_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    local_C_29_ce0 : OUT STD_LOGIC;
    local_C_29_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_C_30_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    local_C_30_ce0 : OUT STD_LOGIC;
    local_C_30_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_C_31_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    local_C_31_ce0 : OUT STD_LOGIC;
    local_C_31_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_C_32_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    local_C_32_ce0 : OUT STD_LOGIC;
    local_C_32_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_C_33_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    local_C_33_ce0 : OUT STD_LOGIC;
    local_C_33_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_C_34_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    local_C_34_ce0 : OUT STD_LOGIC;
    local_C_34_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_C_35_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    local_C_35_ce0 : OUT STD_LOGIC;
    local_C_35_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_C_36_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    local_C_36_ce0 : OUT STD_LOGIC;
    local_C_36_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_C_37_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    local_C_37_ce0 : OUT STD_LOGIC;
    local_C_37_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_C_38_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    local_C_38_ce0 : OUT STD_LOGIC;
    local_C_38_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_C_39_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    local_C_39_ce0 : OUT STD_LOGIC;
    local_C_39_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_C_40_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    local_C_40_ce0 : OUT STD_LOGIC;
    local_C_40_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_C_41_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    local_C_41_ce0 : OUT STD_LOGIC;
    local_C_41_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_C_42_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    local_C_42_ce0 : OUT STD_LOGIC;
    local_C_42_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_C_43_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    local_C_43_ce0 : OUT STD_LOGIC;
    local_C_43_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_C_44_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    local_C_44_ce0 : OUT STD_LOGIC;
    local_C_44_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_C_45_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    local_C_45_ce0 : OUT STD_LOGIC;
    local_C_45_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_C_46_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    local_C_46_ce0 : OUT STD_LOGIC;
    local_C_46_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_C_47_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    local_C_47_ce0 : OUT STD_LOGIC;
    local_C_47_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_C_48_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    local_C_48_ce0 : OUT STD_LOGIC;
    local_C_48_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_C_49_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    local_C_49_ce0 : OUT STD_LOGIC;
    local_C_49_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_C_50_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    local_C_50_ce0 : OUT STD_LOGIC;
    local_C_50_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_C_51_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    local_C_51_ce0 : OUT STD_LOGIC;
    local_C_51_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_C_52_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    local_C_52_ce0 : OUT STD_LOGIC;
    local_C_52_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_C_53_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    local_C_53_ce0 : OUT STD_LOGIC;
    local_C_53_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_C_54_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    local_C_54_ce0 : OUT STD_LOGIC;
    local_C_54_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_C_55_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    local_C_55_ce0 : OUT STD_LOGIC;
    local_C_55_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_C_56_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    local_C_56_ce0 : OUT STD_LOGIC;
    local_C_56_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_C_57_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    local_C_57_ce0 : OUT STD_LOGIC;
    local_C_57_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_C_58_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    local_C_58_ce0 : OUT STD_LOGIC;
    local_C_58_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_C_59_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    local_C_59_ce0 : OUT STD_LOGIC;
    local_C_59_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_C_60_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    local_C_60_ce0 : OUT STD_LOGIC;
    local_C_60_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_C_61_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    local_C_61_ce0 : OUT STD_LOGIC;
    local_C_61_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_C_62_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    local_C_62_ce0 : OUT STD_LOGIC;
    local_C_62_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_C_63_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    local_C_63_ce0 : OUT STD_LOGIC;
    local_C_63_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    zext_ln34_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    shl_ln35_mid2 : IN STD_LOGIC_VECTOR (61 downto 0);
    trunc_ln35_1 : IN STD_LOGIC_VECTOR (61 downto 0);
    C : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_5051_p_din0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    grp_fu_5051_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_5051_p_dout0 : IN STD_LOGIC_VECTOR (38 downto 0);
    grp_fu_5051_p_ce : OUT STD_LOGIC );
end;


architecture behav of matrix_mul_matrix_mul_Pipeline_VITIS_LOOP_76_14 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv13_1000 : STD_LOGIC_VECTOR (12 downto 0) := "1000000000000";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal or_ln75_reg_1525 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln75_reg_1525_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state5_io : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9 : BOOLEAN;
    signal icmp_ln76_1_reg_1540 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln76_1_reg_1540_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state11_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln75_fu_1137_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal gmem2_blk_n_B : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal gmem2_blk_n_W : STD_LOGIC;
    signal gmem2_blk_n_AW : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal zext_ln34_1_cast_fu_1115_p1 : STD_LOGIC_VECTOR (38 downto 0);
    signal zext_ln34_1_cast_reg_1516 : STD_LOGIC_VECTOR (38 downto 0);
    signal icmp_ln75_reg_1521 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln75_fu_1161_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln75_reg_1525_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln75_reg_1525_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln75_fu_1167_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln75_reg_1529 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln75_reg_1529_pp0_iter1_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln75_reg_1529_pp0_iter2_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln75_reg_1529_pp0_iter3_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln75_1_fu_1181_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln75_1_reg_1534 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln75_1_reg_1534_pp0_iter1_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln75_1_reg_1534_pp0_iter2_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln76_1_fu_1195_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln76_1_reg_1540_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln76_1_reg_1540_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln76_1_reg_1540_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln76_1_reg_1540_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln76_1_reg_1540_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln76_1_reg_1540_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln76_1_reg_1540_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln76_1_reg_1540_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln75_1_fu_1216_p1 : STD_LOGIC_VECTOR (38 downto 0);
    signal mul_ln75_reg_1549 : STD_LOGIC_VECTOR (38 downto 0);
    signal sext_ln76_mid2_v_reg_1554 : STD_LOGIC_VECTOR (61 downto 0);
    signal tmp_1_fu_1337_p66 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_reg_1879 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_first_iter_2_phi_fu_1107_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal zext_ln75_fu_1224_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln75_fu_1327_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal jj_fu_216 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln76_fu_1189_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_sig_allocacmp_jj_load : STD_LOGIC_VECTOR (6 downto 0);
    signal ii_fu_220 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_sig_allocacmp_ii_load : STD_LOGIC_VECTOR (6 downto 0);
    signal indvar_flatten249_fu_224 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln75_fu_1143_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_sig_allocacmp_indvar_flatten249_load : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln76_fu_1155_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln75_4_fu_1175_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln75_2_fu_1291_p1 : STD_LOGIC_VECTOR (61 downto 0);
    signal add_ln75_1_fu_1294_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal add_ln75_2_fu_1299_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal sext_ln76_mid2_v_v_v_v_fu_1304_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln75_3_fu_1312_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1219_ce : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter8_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter9_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_condition_1017 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component matrix_mul_mul_7ns_32ns_39_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (38 downto 0) );
    end component;


    component matrix_mul_mux_647_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        din11_WIDTH : INTEGER;
        din12_WIDTH : INTEGER;
        din13_WIDTH : INTEGER;
        din14_WIDTH : INTEGER;
        din15_WIDTH : INTEGER;
        din16_WIDTH : INTEGER;
        din17_WIDTH : INTEGER;
        din18_WIDTH : INTEGER;
        din19_WIDTH : INTEGER;
        din20_WIDTH : INTEGER;
        din21_WIDTH : INTEGER;
        din22_WIDTH : INTEGER;
        din23_WIDTH : INTEGER;
        din24_WIDTH : INTEGER;
        din25_WIDTH : INTEGER;
        din26_WIDTH : INTEGER;
        din27_WIDTH : INTEGER;
        din28_WIDTH : INTEGER;
        din29_WIDTH : INTEGER;
        din30_WIDTH : INTEGER;
        din31_WIDTH : INTEGER;
        din32_WIDTH : INTEGER;
        din33_WIDTH : INTEGER;
        din34_WIDTH : INTEGER;
        din35_WIDTH : INTEGER;
        din36_WIDTH : INTEGER;
        din37_WIDTH : INTEGER;
        din38_WIDTH : INTEGER;
        din39_WIDTH : INTEGER;
        din40_WIDTH : INTEGER;
        din41_WIDTH : INTEGER;
        din42_WIDTH : INTEGER;
        din43_WIDTH : INTEGER;
        din44_WIDTH : INTEGER;
        din45_WIDTH : INTEGER;
        din46_WIDTH : INTEGER;
        din47_WIDTH : INTEGER;
        din48_WIDTH : INTEGER;
        din49_WIDTH : INTEGER;
        din50_WIDTH : INTEGER;
        din51_WIDTH : INTEGER;
        din52_WIDTH : INTEGER;
        din53_WIDTH : INTEGER;
        din54_WIDTH : INTEGER;
        din55_WIDTH : INTEGER;
        din56_WIDTH : INTEGER;
        din57_WIDTH : INTEGER;
        din58_WIDTH : INTEGER;
        din59_WIDTH : INTEGER;
        din60_WIDTH : INTEGER;
        din61_WIDTH : INTEGER;
        din62_WIDTH : INTEGER;
        din63_WIDTH : INTEGER;
        din64_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (31 downto 0);
        din9 : IN STD_LOGIC_VECTOR (31 downto 0);
        din10 : IN STD_LOGIC_VECTOR (31 downto 0);
        din11 : IN STD_LOGIC_VECTOR (31 downto 0);
        din12 : IN STD_LOGIC_VECTOR (31 downto 0);
        din13 : IN STD_LOGIC_VECTOR (31 downto 0);
        din14 : IN STD_LOGIC_VECTOR (31 downto 0);
        din15 : IN STD_LOGIC_VECTOR (31 downto 0);
        din16 : IN STD_LOGIC_VECTOR (31 downto 0);
        din17 : IN STD_LOGIC_VECTOR (31 downto 0);
        din18 : IN STD_LOGIC_VECTOR (31 downto 0);
        din19 : IN STD_LOGIC_VECTOR (31 downto 0);
        din20 : IN STD_LOGIC_VECTOR (31 downto 0);
        din21 : IN STD_LOGIC_VECTOR (31 downto 0);
        din22 : IN STD_LOGIC_VECTOR (31 downto 0);
        din23 : IN STD_LOGIC_VECTOR (31 downto 0);
        din24 : IN STD_LOGIC_VECTOR (31 downto 0);
        din25 : IN STD_LOGIC_VECTOR (31 downto 0);
        din26 : IN STD_LOGIC_VECTOR (31 downto 0);
        din27 : IN STD_LOGIC_VECTOR (31 downto 0);
        din28 : IN STD_LOGIC_VECTOR (31 downto 0);
        din29 : IN STD_LOGIC_VECTOR (31 downto 0);
        din30 : IN STD_LOGIC_VECTOR (31 downto 0);
        din31 : IN STD_LOGIC_VECTOR (31 downto 0);
        din32 : IN STD_LOGIC_VECTOR (31 downto 0);
        din33 : IN STD_LOGIC_VECTOR (31 downto 0);
        din34 : IN STD_LOGIC_VECTOR (31 downto 0);
        din35 : IN STD_LOGIC_VECTOR (31 downto 0);
        din36 : IN STD_LOGIC_VECTOR (31 downto 0);
        din37 : IN STD_LOGIC_VECTOR (31 downto 0);
        din38 : IN STD_LOGIC_VECTOR (31 downto 0);
        din39 : IN STD_LOGIC_VECTOR (31 downto 0);
        din40 : IN STD_LOGIC_VECTOR (31 downto 0);
        din41 : IN STD_LOGIC_VECTOR (31 downto 0);
        din42 : IN STD_LOGIC_VECTOR (31 downto 0);
        din43 : IN STD_LOGIC_VECTOR (31 downto 0);
        din44 : IN STD_LOGIC_VECTOR (31 downto 0);
        din45 : IN STD_LOGIC_VECTOR (31 downto 0);
        din46 : IN STD_LOGIC_VECTOR (31 downto 0);
        din47 : IN STD_LOGIC_VECTOR (31 downto 0);
        din48 : IN STD_LOGIC_VECTOR (31 downto 0);
        din49 : IN STD_LOGIC_VECTOR (31 downto 0);
        din50 : IN STD_LOGIC_VECTOR (31 downto 0);
        din51 : IN STD_LOGIC_VECTOR (31 downto 0);
        din52 : IN STD_LOGIC_VECTOR (31 downto 0);
        din53 : IN STD_LOGIC_VECTOR (31 downto 0);
        din54 : IN STD_LOGIC_VECTOR (31 downto 0);
        din55 : IN STD_LOGIC_VECTOR (31 downto 0);
        din56 : IN STD_LOGIC_VECTOR (31 downto 0);
        din57 : IN STD_LOGIC_VECTOR (31 downto 0);
        din58 : IN STD_LOGIC_VECTOR (31 downto 0);
        din59 : IN STD_LOGIC_VECTOR (31 downto 0);
        din60 : IN STD_LOGIC_VECTOR (31 downto 0);
        din61 : IN STD_LOGIC_VECTOR (31 downto 0);
        din62 : IN STD_LOGIC_VECTOR (31 downto 0);
        din63 : IN STD_LOGIC_VECTOR (31 downto 0);
        din64 : IN STD_LOGIC_VECTOR (6 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component matrix_mul_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mux_647_32_1_1_U470 : component matrix_mul_mux_647_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 32,
        din23_WIDTH => 32,
        din24_WIDTH => 32,
        din25_WIDTH => 32,
        din26_WIDTH => 32,
        din27_WIDTH => 32,
        din28_WIDTH => 32,
        din29_WIDTH => 32,
        din30_WIDTH => 32,
        din31_WIDTH => 32,
        din32_WIDTH => 32,
        din33_WIDTH => 32,
        din34_WIDTH => 32,
        din35_WIDTH => 32,
        din36_WIDTH => 32,
        din37_WIDTH => 32,
        din38_WIDTH => 32,
        din39_WIDTH => 32,
        din40_WIDTH => 32,
        din41_WIDTH => 32,
        din42_WIDTH => 32,
        din43_WIDTH => 32,
        din44_WIDTH => 32,
        din45_WIDTH => 32,
        din46_WIDTH => 32,
        din47_WIDTH => 32,
        din48_WIDTH => 32,
        din49_WIDTH => 32,
        din50_WIDTH => 32,
        din51_WIDTH => 32,
        din52_WIDTH => 32,
        din53_WIDTH => 32,
        din54_WIDTH => 32,
        din55_WIDTH => 32,
        din56_WIDTH => 32,
        din57_WIDTH => 32,
        din58_WIDTH => 32,
        din59_WIDTH => 32,
        din60_WIDTH => 32,
        din61_WIDTH => 32,
        din62_WIDTH => 32,
        din63_WIDTH => 32,
        din64_WIDTH => 7,
        dout_WIDTH => 32)
    port map (
        din0 => local_C_q0,
        din1 => local_C_1_q0,
        din2 => local_C_2_q0,
        din3 => local_C_3_q0,
        din4 => local_C_4_q0,
        din5 => local_C_5_q0,
        din6 => local_C_6_q0,
        din7 => local_C_7_q0,
        din8 => local_C_8_q0,
        din9 => local_C_9_q0,
        din10 => local_C_10_q0,
        din11 => local_C_11_q0,
        din12 => local_C_12_q0,
        din13 => local_C_13_q0,
        din14 => local_C_14_q0,
        din15 => local_C_15_q0,
        din16 => local_C_16_q0,
        din17 => local_C_17_q0,
        din18 => local_C_18_q0,
        din19 => local_C_19_q0,
        din20 => local_C_20_q0,
        din21 => local_C_21_q0,
        din22 => local_C_22_q0,
        din23 => local_C_23_q0,
        din24 => local_C_24_q0,
        din25 => local_C_25_q0,
        din26 => local_C_26_q0,
        din27 => local_C_27_q0,
        din28 => local_C_28_q0,
        din29 => local_C_29_q0,
        din30 => local_C_30_q0,
        din31 => local_C_31_q0,
        din32 => local_C_32_q0,
        din33 => local_C_33_q0,
        din34 => local_C_34_q0,
        din35 => local_C_35_q0,
        din36 => local_C_36_q0,
        din37 => local_C_37_q0,
        din38 => local_C_38_q0,
        din39 => local_C_39_q0,
        din40 => local_C_40_q0,
        din41 => local_C_41_q0,
        din42 => local_C_42_q0,
        din43 => local_C_43_q0,
        din44 => local_C_44_q0,
        din45 => local_C_45_q0,
        din46 => local_C_46_q0,
        din47 => local_C_47_q0,
        din48 => local_C_48_q0,
        din49 => local_C_49_q0,
        din50 => local_C_50_q0,
        din51 => local_C_51_q0,
        din52 => local_C_52_q0,
        din53 => local_C_53_q0,
        din54 => local_C_54_q0,
        din55 => local_C_55_q0,
        din56 => local_C_56_q0,
        din57 => local_C_57_q0,
        din58 => local_C_58_q0,
        din59 => local_C_59_q0,
        din60 => local_C_60_q0,
        din61 => local_C_61_q0,
        din62 => local_C_62_q0,
        din63 => local_C_63_q0,
        din64 => select_ln75_reg_1529_pp0_iter3_reg,
        dout => tmp_1_fu_1337_p66);

    flow_control_loop_pipe_sequential_init_U : component matrix_mul_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready_pp0_iter9_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    ii_fu_220_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln75_fu_1137_p2 = ap_const_lv1_0))) then 
                    ii_fu_220 <= select_ln75_1_fu_1181_p3;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    ii_fu_220 <= ap_const_lv7_0;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten249_fu_224_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln75_fu_1137_p2 = ap_const_lv1_0))) then 
                    indvar_flatten249_fu_224 <= add_ln75_fu_1143_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten249_fu_224 <= ap_const_lv13_0;
                end if;
            end if; 
        end if;
    end process;

    jj_fu_216_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln75_fu_1137_p2 = ap_const_lv1_0))) then 
                    jj_fu_216 <= add_ln76_fu_1189_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    jj_fu_216 <= ap_const_lv7_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                icmp_ln75_reg_1521 <= icmp_ln75_fu_1137_p2;
                icmp_ln76_1_reg_1540_pp0_iter1_reg <= icmp_ln76_1_reg_1540;
                or_ln75_reg_1525_pp0_iter1_reg <= or_ln75_reg_1525;
                select_ln75_1_reg_1534_pp0_iter1_reg <= select_ln75_1_reg_1534;
                select_ln75_reg_1529_pp0_iter1_reg <= select_ln75_reg_1529;
                    zext_ln34_1_cast_reg_1516(31 downto 0) <= zext_ln34_1_cast_fu_1115_p1(31 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
                ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
                ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
                icmp_ln76_1_reg_1540_pp0_iter2_reg <= icmp_ln76_1_reg_1540_pp0_iter1_reg;
                icmp_ln76_1_reg_1540_pp0_iter3_reg <= icmp_ln76_1_reg_1540_pp0_iter2_reg;
                icmp_ln76_1_reg_1540_pp0_iter4_reg <= icmp_ln76_1_reg_1540_pp0_iter3_reg;
                icmp_ln76_1_reg_1540_pp0_iter5_reg <= icmp_ln76_1_reg_1540_pp0_iter4_reg;
                icmp_ln76_1_reg_1540_pp0_iter6_reg <= icmp_ln76_1_reg_1540_pp0_iter5_reg;
                icmp_ln76_1_reg_1540_pp0_iter7_reg <= icmp_ln76_1_reg_1540_pp0_iter6_reg;
                icmp_ln76_1_reg_1540_pp0_iter8_reg <= icmp_ln76_1_reg_1540_pp0_iter7_reg;
                icmp_ln76_1_reg_1540_pp0_iter9_reg <= icmp_ln76_1_reg_1540_pp0_iter8_reg;
                mul_ln75_reg_1549 <= grp_fu_5051_p_dout0;
                or_ln75_reg_1525_pp0_iter2_reg <= or_ln75_reg_1525_pp0_iter1_reg;
                or_ln75_reg_1525_pp0_iter3_reg <= or_ln75_reg_1525_pp0_iter2_reg;
                select_ln75_1_reg_1534_pp0_iter2_reg <= select_ln75_1_reg_1534_pp0_iter1_reg;
                select_ln75_reg_1529_pp0_iter2_reg <= select_ln75_reg_1529_pp0_iter1_reg;
                select_ln75_reg_1529_pp0_iter3_reg <= select_ln75_reg_1529_pp0_iter2_reg;
                sext_ln76_mid2_v_reg_1554 <= add_ln75_3_fu_1312_p2(63 downto 2);
                tmp_1_reg_1879 <= tmp_1_fu_1337_p66;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln75_fu_1137_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln76_1_reg_1540 <= icmp_ln76_1_fu_1195_p2;
                or_ln75_reg_1525 <= or_ln75_fu_1161_p2;
                select_ln75_1_reg_1534 <= select_ln75_1_fu_1181_p3;
                select_ln75_reg_1529 <= select_ln75_fu_1167_p3;
            end if;
        end if;
    end process;
    zext_ln34_1_cast_reg_1516(38 downto 32) <= "0000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln75_1_fu_1294_p2 <= std_logic_vector(unsigned(shl_ln35_mid2) + unsigned(zext_ln75_2_fu_1291_p1));
    add_ln75_2_fu_1299_p2 <= std_logic_vector(unsigned(add_ln75_1_fu_1294_p2) + unsigned(trunc_ln35_1));
    add_ln75_3_fu_1312_p2 <= std_logic_vector(unsigned(sext_ln76_mid2_v_v_v_v_fu_1304_p3) + unsigned(C));
    add_ln75_4_fu_1175_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_ii_load) + unsigned(ap_const_lv7_1));
    add_ln75_fu_1143_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_indvar_flatten249_load) + unsigned(ap_const_lv13_1));
    add_ln76_fu_1189_p2 <= std_logic_vector(unsigned(select_ln75_fu_1167_p3) + unsigned(ap_const_lv7_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter10, m_axi_gmem2_BVALID, icmp_ln76_1_reg_1540_pp0_iter9_reg)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (icmp_ln76_1_reg_1540_pp0_iter9_reg = ap_const_lv1_1) and (m_axi_gmem2_BVALID = ap_const_logic_0));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter10, m_axi_gmem2_WREADY, m_axi_gmem2_BVALID, ap_block_state5_io, icmp_ln76_1_reg_1540_pp0_iter9_reg)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (icmp_ln76_1_reg_1540_pp0_iter9_reg = ap_const_lv1_1) and (m_axi_gmem2_BVALID = ap_const_logic_0)) or ((m_axi_gmem2_WREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state5_io)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter10, m_axi_gmem2_WREADY, m_axi_gmem2_BVALID, ap_block_state5_io, icmp_ln76_1_reg_1540_pp0_iter9_reg)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (icmp_ln76_1_reg_1540_pp0_iter9_reg = ap_const_lv1_1) and (m_axi_gmem2_BVALID = ap_const_logic_0)) or ((m_axi_gmem2_WREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state5_io)));
    end process;

        ap_block_state10_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state11_pp0_stage0_iter10_assign_proc : process(m_axi_gmem2_BVALID, icmp_ln76_1_reg_1540_pp0_iter9_reg)
    begin
                ap_block_state11_pp0_stage0_iter10 <= ((icmp_ln76_1_reg_1540_pp0_iter9_reg = ap_const_lv1_1) and (m_axi_gmem2_BVALID = ap_const_logic_0));
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_io_assign_proc : process(m_axi_gmem2_AWREADY, or_ln75_reg_1525_pp0_iter3_reg)
    begin
                ap_block_state5_io <= ((m_axi_gmem2_AWREADY = ap_const_logic_0) and (or_ln75_reg_1525_pp0_iter3_reg = ap_const_lv1_1));
    end process;

        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_1017_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln75_reg_1521)
    begin
                ap_condition_1017 <= ((icmp_ln75_reg_1521 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0));
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln75_fu_1137_p2)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln75_fu_1137_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter9_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter9_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_phi_mux_first_iter_2_phi_fu_1107_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_loop_init, ap_condition_1017)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then
            if ((ap_const_boolean_1 = ap_condition_1017)) then 
                ap_phi_mux_first_iter_2_phi_fu_1107_p4 <= ap_const_lv1_0;
            elsif ((ap_loop_init = ap_const_logic_1)) then 
                ap_phi_mux_first_iter_2_phi_fu_1107_p4 <= ap_const_lv1_1;
            else 
                ap_phi_mux_first_iter_2_phi_fu_1107_p4 <= ap_const_lv1_0;
            end if;
        else 
            ap_phi_mux_first_iter_2_phi_fu_1107_p4 <= ap_const_lv1_0;
        end if; 
    end process;


    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_ii_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, ii_fu_220)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_ii_load <= ap_const_lv7_0;
        else 
            ap_sig_allocacmp_ii_load <= ii_fu_220;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten249_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, indvar_flatten249_fu_224)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_indvar_flatten249_load <= ap_const_lv13_0;
        else 
            ap_sig_allocacmp_indvar_flatten249_load <= indvar_flatten249_fu_224;
        end if; 
    end process;


    ap_sig_allocacmp_jj_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, jj_fu_216)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_jj_load <= ap_const_lv7_0;
        else 
            ap_sig_allocacmp_jj_load <= jj_fu_216;
        end if; 
    end process;


    gmem2_blk_n_AW_assign_proc : process(ap_enable_reg_pp0_iter4, m_axi_gmem2_AWREADY, or_ln75_reg_1525_pp0_iter3_reg, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (or_ln75_reg_1525_pp0_iter3_reg = ap_const_lv1_1))) then 
            gmem2_blk_n_AW <= m_axi_gmem2_AWREADY;
        else 
            gmem2_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    gmem2_blk_n_B_assign_proc : process(ap_enable_reg_pp0_iter10, m_axi_gmem2_BVALID, icmp_ln76_1_reg_1540_pp0_iter9_reg, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln76_1_reg_1540_pp0_iter9_reg = ap_const_lv1_1))) then 
            gmem2_blk_n_B <= m_axi_gmem2_BVALID;
        else 
            gmem2_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;


    gmem2_blk_n_W_assign_proc : process(ap_enable_reg_pp0_iter5, m_axi_gmem2_WREADY, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            gmem2_blk_n_W <= m_axi_gmem2_WREADY;
        else 
            gmem2_blk_n_W <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_1219_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1219_ce <= ap_const_logic_1;
        else 
            grp_fu_1219_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_5051_p_ce <= grp_fu_1219_ce;
    grp_fu_5051_p_din0 <= zext_ln75_1_fu_1216_p1(7 - 1 downto 0);
    grp_fu_5051_p_din1 <= zext_ln34_1_cast_reg_1516(32 - 1 downto 0);
    icmp_ln75_fu_1137_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten249_load = ap_const_lv13_1000) else "0";
    icmp_ln76_1_fu_1195_p2 <= "1" when (add_ln76_fu_1189_p2 = ap_const_lv7_40) else "0";
    icmp_ln76_fu_1155_p2 <= "1" when (ap_sig_allocacmp_jj_load = ap_const_lv7_40) else "0";
    local_C_10_address0 <= zext_ln75_fu_1224_p1(6 - 1 downto 0);

    local_C_10_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            local_C_10_ce0 <= ap_const_logic_1;
        else 
            local_C_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_C_11_address0 <= zext_ln75_fu_1224_p1(6 - 1 downto 0);

    local_C_11_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            local_C_11_ce0 <= ap_const_logic_1;
        else 
            local_C_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_C_12_address0 <= zext_ln75_fu_1224_p1(6 - 1 downto 0);

    local_C_12_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            local_C_12_ce0 <= ap_const_logic_1;
        else 
            local_C_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_C_13_address0 <= zext_ln75_fu_1224_p1(6 - 1 downto 0);

    local_C_13_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            local_C_13_ce0 <= ap_const_logic_1;
        else 
            local_C_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_C_14_address0 <= zext_ln75_fu_1224_p1(6 - 1 downto 0);

    local_C_14_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            local_C_14_ce0 <= ap_const_logic_1;
        else 
            local_C_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_C_15_address0 <= zext_ln75_fu_1224_p1(6 - 1 downto 0);

    local_C_15_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            local_C_15_ce0 <= ap_const_logic_1;
        else 
            local_C_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_C_16_address0 <= zext_ln75_fu_1224_p1(6 - 1 downto 0);

    local_C_16_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            local_C_16_ce0 <= ap_const_logic_1;
        else 
            local_C_16_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_C_17_address0 <= zext_ln75_fu_1224_p1(6 - 1 downto 0);

    local_C_17_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            local_C_17_ce0 <= ap_const_logic_1;
        else 
            local_C_17_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_C_18_address0 <= zext_ln75_fu_1224_p1(6 - 1 downto 0);

    local_C_18_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            local_C_18_ce0 <= ap_const_logic_1;
        else 
            local_C_18_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_C_19_address0 <= zext_ln75_fu_1224_p1(6 - 1 downto 0);

    local_C_19_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            local_C_19_ce0 <= ap_const_logic_1;
        else 
            local_C_19_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_C_1_address0 <= zext_ln75_fu_1224_p1(6 - 1 downto 0);

    local_C_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            local_C_1_ce0 <= ap_const_logic_1;
        else 
            local_C_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_C_20_address0 <= zext_ln75_fu_1224_p1(6 - 1 downto 0);

    local_C_20_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            local_C_20_ce0 <= ap_const_logic_1;
        else 
            local_C_20_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_C_21_address0 <= zext_ln75_fu_1224_p1(6 - 1 downto 0);

    local_C_21_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            local_C_21_ce0 <= ap_const_logic_1;
        else 
            local_C_21_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_C_22_address0 <= zext_ln75_fu_1224_p1(6 - 1 downto 0);

    local_C_22_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            local_C_22_ce0 <= ap_const_logic_1;
        else 
            local_C_22_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_C_23_address0 <= zext_ln75_fu_1224_p1(6 - 1 downto 0);

    local_C_23_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            local_C_23_ce0 <= ap_const_logic_1;
        else 
            local_C_23_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_C_24_address0 <= zext_ln75_fu_1224_p1(6 - 1 downto 0);

    local_C_24_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            local_C_24_ce0 <= ap_const_logic_1;
        else 
            local_C_24_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_C_25_address0 <= zext_ln75_fu_1224_p1(6 - 1 downto 0);

    local_C_25_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            local_C_25_ce0 <= ap_const_logic_1;
        else 
            local_C_25_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_C_26_address0 <= zext_ln75_fu_1224_p1(6 - 1 downto 0);

    local_C_26_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            local_C_26_ce0 <= ap_const_logic_1;
        else 
            local_C_26_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_C_27_address0 <= zext_ln75_fu_1224_p1(6 - 1 downto 0);

    local_C_27_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            local_C_27_ce0 <= ap_const_logic_1;
        else 
            local_C_27_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_C_28_address0 <= zext_ln75_fu_1224_p1(6 - 1 downto 0);

    local_C_28_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            local_C_28_ce0 <= ap_const_logic_1;
        else 
            local_C_28_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_C_29_address0 <= zext_ln75_fu_1224_p1(6 - 1 downto 0);

    local_C_29_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            local_C_29_ce0 <= ap_const_logic_1;
        else 
            local_C_29_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_C_2_address0 <= zext_ln75_fu_1224_p1(6 - 1 downto 0);

    local_C_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            local_C_2_ce0 <= ap_const_logic_1;
        else 
            local_C_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_C_30_address0 <= zext_ln75_fu_1224_p1(6 - 1 downto 0);

    local_C_30_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            local_C_30_ce0 <= ap_const_logic_1;
        else 
            local_C_30_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_C_31_address0 <= zext_ln75_fu_1224_p1(6 - 1 downto 0);

    local_C_31_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            local_C_31_ce0 <= ap_const_logic_1;
        else 
            local_C_31_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_C_32_address0 <= zext_ln75_fu_1224_p1(6 - 1 downto 0);

    local_C_32_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            local_C_32_ce0 <= ap_const_logic_1;
        else 
            local_C_32_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_C_33_address0 <= zext_ln75_fu_1224_p1(6 - 1 downto 0);

    local_C_33_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            local_C_33_ce0 <= ap_const_logic_1;
        else 
            local_C_33_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_C_34_address0 <= zext_ln75_fu_1224_p1(6 - 1 downto 0);

    local_C_34_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            local_C_34_ce0 <= ap_const_logic_1;
        else 
            local_C_34_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_C_35_address0 <= zext_ln75_fu_1224_p1(6 - 1 downto 0);

    local_C_35_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            local_C_35_ce0 <= ap_const_logic_1;
        else 
            local_C_35_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_C_36_address0 <= zext_ln75_fu_1224_p1(6 - 1 downto 0);

    local_C_36_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            local_C_36_ce0 <= ap_const_logic_1;
        else 
            local_C_36_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_C_37_address0 <= zext_ln75_fu_1224_p1(6 - 1 downto 0);

    local_C_37_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            local_C_37_ce0 <= ap_const_logic_1;
        else 
            local_C_37_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_C_38_address0 <= zext_ln75_fu_1224_p1(6 - 1 downto 0);

    local_C_38_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            local_C_38_ce0 <= ap_const_logic_1;
        else 
            local_C_38_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_C_39_address0 <= zext_ln75_fu_1224_p1(6 - 1 downto 0);

    local_C_39_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            local_C_39_ce0 <= ap_const_logic_1;
        else 
            local_C_39_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_C_3_address0 <= zext_ln75_fu_1224_p1(6 - 1 downto 0);

    local_C_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            local_C_3_ce0 <= ap_const_logic_1;
        else 
            local_C_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_C_40_address0 <= zext_ln75_fu_1224_p1(6 - 1 downto 0);

    local_C_40_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            local_C_40_ce0 <= ap_const_logic_1;
        else 
            local_C_40_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_C_41_address0 <= zext_ln75_fu_1224_p1(6 - 1 downto 0);

    local_C_41_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            local_C_41_ce0 <= ap_const_logic_1;
        else 
            local_C_41_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_C_42_address0 <= zext_ln75_fu_1224_p1(6 - 1 downto 0);

    local_C_42_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            local_C_42_ce0 <= ap_const_logic_1;
        else 
            local_C_42_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_C_43_address0 <= zext_ln75_fu_1224_p1(6 - 1 downto 0);

    local_C_43_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            local_C_43_ce0 <= ap_const_logic_1;
        else 
            local_C_43_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_C_44_address0 <= zext_ln75_fu_1224_p1(6 - 1 downto 0);

    local_C_44_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            local_C_44_ce0 <= ap_const_logic_1;
        else 
            local_C_44_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_C_45_address0 <= zext_ln75_fu_1224_p1(6 - 1 downto 0);

    local_C_45_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            local_C_45_ce0 <= ap_const_logic_1;
        else 
            local_C_45_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_C_46_address0 <= zext_ln75_fu_1224_p1(6 - 1 downto 0);

    local_C_46_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            local_C_46_ce0 <= ap_const_logic_1;
        else 
            local_C_46_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_C_47_address0 <= zext_ln75_fu_1224_p1(6 - 1 downto 0);

    local_C_47_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            local_C_47_ce0 <= ap_const_logic_1;
        else 
            local_C_47_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_C_48_address0 <= zext_ln75_fu_1224_p1(6 - 1 downto 0);

    local_C_48_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            local_C_48_ce0 <= ap_const_logic_1;
        else 
            local_C_48_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_C_49_address0 <= zext_ln75_fu_1224_p1(6 - 1 downto 0);

    local_C_49_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            local_C_49_ce0 <= ap_const_logic_1;
        else 
            local_C_49_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_C_4_address0 <= zext_ln75_fu_1224_p1(6 - 1 downto 0);

    local_C_4_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            local_C_4_ce0 <= ap_const_logic_1;
        else 
            local_C_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_C_50_address0 <= zext_ln75_fu_1224_p1(6 - 1 downto 0);

    local_C_50_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            local_C_50_ce0 <= ap_const_logic_1;
        else 
            local_C_50_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_C_51_address0 <= zext_ln75_fu_1224_p1(6 - 1 downto 0);

    local_C_51_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            local_C_51_ce0 <= ap_const_logic_1;
        else 
            local_C_51_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_C_52_address0 <= zext_ln75_fu_1224_p1(6 - 1 downto 0);

    local_C_52_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            local_C_52_ce0 <= ap_const_logic_1;
        else 
            local_C_52_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_C_53_address0 <= zext_ln75_fu_1224_p1(6 - 1 downto 0);

    local_C_53_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            local_C_53_ce0 <= ap_const_logic_1;
        else 
            local_C_53_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_C_54_address0 <= zext_ln75_fu_1224_p1(6 - 1 downto 0);

    local_C_54_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            local_C_54_ce0 <= ap_const_logic_1;
        else 
            local_C_54_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_C_55_address0 <= zext_ln75_fu_1224_p1(6 - 1 downto 0);

    local_C_55_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            local_C_55_ce0 <= ap_const_logic_1;
        else 
            local_C_55_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_C_56_address0 <= zext_ln75_fu_1224_p1(6 - 1 downto 0);

    local_C_56_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            local_C_56_ce0 <= ap_const_logic_1;
        else 
            local_C_56_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_C_57_address0 <= zext_ln75_fu_1224_p1(6 - 1 downto 0);

    local_C_57_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            local_C_57_ce0 <= ap_const_logic_1;
        else 
            local_C_57_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_C_58_address0 <= zext_ln75_fu_1224_p1(6 - 1 downto 0);

    local_C_58_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            local_C_58_ce0 <= ap_const_logic_1;
        else 
            local_C_58_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_C_59_address0 <= zext_ln75_fu_1224_p1(6 - 1 downto 0);

    local_C_59_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            local_C_59_ce0 <= ap_const_logic_1;
        else 
            local_C_59_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_C_5_address0 <= zext_ln75_fu_1224_p1(6 - 1 downto 0);

    local_C_5_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            local_C_5_ce0 <= ap_const_logic_1;
        else 
            local_C_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_C_60_address0 <= zext_ln75_fu_1224_p1(6 - 1 downto 0);

    local_C_60_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            local_C_60_ce0 <= ap_const_logic_1;
        else 
            local_C_60_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_C_61_address0 <= zext_ln75_fu_1224_p1(6 - 1 downto 0);

    local_C_61_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            local_C_61_ce0 <= ap_const_logic_1;
        else 
            local_C_61_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_C_62_address0 <= zext_ln75_fu_1224_p1(6 - 1 downto 0);

    local_C_62_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            local_C_62_ce0 <= ap_const_logic_1;
        else 
            local_C_62_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_C_63_address0 <= zext_ln75_fu_1224_p1(6 - 1 downto 0);

    local_C_63_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            local_C_63_ce0 <= ap_const_logic_1;
        else 
            local_C_63_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_C_6_address0 <= zext_ln75_fu_1224_p1(6 - 1 downto 0);

    local_C_6_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            local_C_6_ce0 <= ap_const_logic_1;
        else 
            local_C_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_C_7_address0 <= zext_ln75_fu_1224_p1(6 - 1 downto 0);

    local_C_7_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            local_C_7_ce0 <= ap_const_logic_1;
        else 
            local_C_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_C_8_address0 <= zext_ln75_fu_1224_p1(6 - 1 downto 0);

    local_C_8_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            local_C_8_ce0 <= ap_const_logic_1;
        else 
            local_C_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_C_9_address0 <= zext_ln75_fu_1224_p1(6 - 1 downto 0);

    local_C_9_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            local_C_9_ce0 <= ap_const_logic_1;
        else 
            local_C_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_C_address0 <= zext_ln75_fu_1224_p1(6 - 1 downto 0);

    local_C_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            local_C_ce0 <= ap_const_logic_1;
        else 
            local_C_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem2_ARADDR <= ap_const_lv64_0;
    m_axi_gmem2_ARBURST <= ap_const_lv2_0;
    m_axi_gmem2_ARCACHE <= ap_const_lv4_0;
    m_axi_gmem2_ARID <= ap_const_lv1_0;
    m_axi_gmem2_ARLEN <= ap_const_lv32_0;
    m_axi_gmem2_ARLOCK <= ap_const_lv2_0;
    m_axi_gmem2_ARPROT <= ap_const_lv3_0;
    m_axi_gmem2_ARQOS <= ap_const_lv4_0;
    m_axi_gmem2_ARREGION <= ap_const_lv4_0;
    m_axi_gmem2_ARSIZE <= ap_const_lv3_0;
    m_axi_gmem2_ARUSER <= ap_const_lv1_0;
    m_axi_gmem2_ARVALID <= ap_const_logic_0;
    m_axi_gmem2_AWADDR <= sext_ln75_fu_1327_p1;
    m_axi_gmem2_AWBURST <= ap_const_lv2_0;
    m_axi_gmem2_AWCACHE <= ap_const_lv4_0;
    m_axi_gmem2_AWID <= ap_const_lv1_0;
    m_axi_gmem2_AWLEN <= ap_const_lv32_40;
    m_axi_gmem2_AWLOCK <= ap_const_lv2_0;
    m_axi_gmem2_AWPROT <= ap_const_lv3_0;
    m_axi_gmem2_AWQOS <= ap_const_lv4_0;
    m_axi_gmem2_AWREGION <= ap_const_lv4_0;
    m_axi_gmem2_AWSIZE <= ap_const_lv3_0;
    m_axi_gmem2_AWUSER <= ap_const_lv1_0;

    m_axi_gmem2_AWVALID_assign_proc : process(ap_enable_reg_pp0_iter4, or_ln75_reg_1525_pp0_iter3_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln75_reg_1525_pp0_iter3_reg = ap_const_lv1_1))) then 
            m_axi_gmem2_AWVALID <= ap_const_logic_1;
        else 
            m_axi_gmem2_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_gmem2_BREADY_assign_proc : process(ap_enable_reg_pp0_iter10, icmp_ln76_1_reg_1540_pp0_iter9_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln76_1_reg_1540_pp0_iter9_reg = ap_const_lv1_1))) then 
            m_axi_gmem2_BREADY <= ap_const_logic_1;
        else 
            m_axi_gmem2_BREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem2_RREADY <= ap_const_logic_0;
    m_axi_gmem2_WDATA <= tmp_1_reg_1879;
    m_axi_gmem2_WID <= ap_const_lv1_0;
    m_axi_gmem2_WLAST <= ap_const_logic_0;
    m_axi_gmem2_WSTRB <= ap_const_lv4_F;
    m_axi_gmem2_WUSER <= ap_const_lv1_0;

    m_axi_gmem2_WVALID_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            m_axi_gmem2_WVALID <= ap_const_logic_1;
        else 
            m_axi_gmem2_WVALID <= ap_const_logic_0;
        end if; 
    end process;

    or_ln75_fu_1161_p2 <= (icmp_ln76_fu_1155_p2 or ap_phi_mux_first_iter_2_phi_fu_1107_p4);
    select_ln75_1_fu_1181_p3 <= 
        add_ln75_4_fu_1175_p2 when (icmp_ln76_fu_1155_p2(0) = '1') else 
        ap_sig_allocacmp_ii_load;
    select_ln75_fu_1167_p3 <= 
        ap_const_lv7_0 when (icmp_ln76_fu_1155_p2(0) = '1') else 
        ap_sig_allocacmp_jj_load;
        sext_ln75_fu_1327_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln76_mid2_v_reg_1554),64));

    sext_ln76_mid2_v_v_v_v_fu_1304_p3 <= (add_ln75_2_fu_1299_p2 & ap_const_lv2_0);
    zext_ln34_1_cast_fu_1115_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln34_1),39));
    zext_ln75_1_fu_1216_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln75_1_reg_1534),39));
    zext_ln75_2_fu_1291_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln75_reg_1549),62));
    zext_ln75_fu_1224_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln75_1_reg_1534_pp0_iter2_reg),64));
end behav;
